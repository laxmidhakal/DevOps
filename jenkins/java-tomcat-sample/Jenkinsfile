pipeline {
    agent {
        label 'ubuntu-node'
    }
    stages {
        stage('Build Application') {
            steps {
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post {
                success {
                    echo "Archiving the artifacts..."
                    archiveArtifacts artifacts: '**/*.war', followSymlinks: false, onlyIfSuccessful: true
                }
            }
        }
        stage('Create Docker Image') {
            steps {
                echo "Building Docker image..."
                sh '''
                cp jenkins/java-tomcat-sample/target/*.war jenkins/java-tomcat-sample/app.war
                cd jenkins/java-tomcat-sample
                docker build -t localtomcatimg:$BUILD_NUMBER .
                '''
            }
        }
        stage('Deploy to Staging Environment') {
            steps {
                echo "Deploying to staging environment using Docker Compose..."
                writeFile file: 'docker-compose.staging.yml', text: """
                version: '3.8'
                services:
                  tomcat-staging:
                    image: localtomcatimg:${BUILD_NUMBER}
                    container_name: tomcatInstanceStaging
                    ports:
                      - "8082:8080"
                    restart: always
                """
                sh '''
                docker-compose -f docker-compose.staging.yml down || true
                docker-compose -f docker-compose.staging.yml up -d
                '''
            }
        }
        stage('Deploy to Production Environment') {
            agent {
                label 'ubuntu-slave'
            }
            steps {
                timeout(time: 1, unit: 'DAYS') {
                    input message: 'Approve PRODUCTION Deployment?'
                }
                echo "Deploying to production environment using Docker Compose..."
                writeFile file: 'docker-compose.prod.yml', text: """
                version: '3.8'
                services:
                  tomcat-prod:
                    image: localtomcatimg:${BUILD_NUMBER}
                    container_name: tomcatInstanceProd
                    ports:
                      - "8083:8080"
                    restart: always
                """
                sh '''
                docker-compose -f docker-compose.prod.yml down || true
                docker-compose -f docker-compose.prod.yml up -d
                '''
            }
        }
    }
}
